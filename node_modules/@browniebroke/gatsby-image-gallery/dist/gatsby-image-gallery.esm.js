import React, { useState } from 'react';
import { getImage, GatsbyImage } from 'gatsby-plugin-image';
import Lightbox from 'react-image-lightbox';
import styled, { css } from 'styled-components';
import LightboxCSS from 'react-image-lightbox/style.css';

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

var _templateObject;
var Row = /*#__PURE__*/styled.div(_templateObject || (_templateObject = /*#__PURE__*/_taggedTemplateLiteralLoose(["\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n"])));

var _templateObject$1, _templateObject2, _templateObject3;
var Col = /*#__PURE__*/styled.div(_templateObject$1 || (_templateObject$1 = /*#__PURE__*/_taggedTemplateLiteralLoose(["\n  flex-grow: 0;\n  flex-shrink: 0;\n  ", "\n\n  @media (min-width: 576px) {\n    ", "\n  }\n"])), function (props) {
  return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose(["\n      flex-basis: ", "%;\n      max-width: ", "%;\n    "])), props.width, props.width);
}, function (props) {
  return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose(["\n        flex-basis: ", "%;\n        max-width: ", "%;\n      "])), props.md, props.md);
});

var _templateObject$2;
var ImgWrapper = /*#__PURE__*/styled.div(_templateObject$2 || (_templateObject$2 = /*#__PURE__*/_taggedTemplateLiteralLoose(["\n  margin: ", ";\n"])), function (props) {
  return props.margin;
});

var _templateObject$3;
var StyledLightbox = /*#__PURE__*/styled(Lightbox)(_templateObject$3 || (_templateObject$3 = /*#__PURE__*/_taggedTemplateLiteralLoose(["\n  ", "\n"])), LightboxCSS);

var Gallery = function Gallery(_ref) {
  var _images$index, _images$index$full, _images$index$full$im, _images$index$full$im2, _images$nextIndex, _images$nextIndex$ful, _images$nextIndex$ful2, _images$nextIndex$ful3, _images$prevIndex, _images$prevIndex$ful, _images$prevIndex$ful2, _images$prevIndex$ful3;

  var _ref$images = _ref.images,
      images = _ref$images === void 0 ? [] : _ref$images,
      _ref$colWidth = _ref.colWidth,
      colWidth = _ref$colWidth === void 0 ? 100 / 3 : _ref$colWidth,
      _ref$mdColWidth = _ref.mdColWidth,
      mdColWidth = _ref$mdColWidth === void 0 ? 100 / 4 : _ref$mdColWidth,
      _ref$gutter = _ref.gutter,
      gutter = _ref$gutter === void 0 ? '0.25rem' : _ref$gutter,
      _ref$imgClass = _ref.imgClass,
      imgClass = _ref$imgClass === void 0 ? '' : _ref$imgClass,
      _ref$lightboxOptions = _ref.lightboxOptions,
      lightboxOptions = _ref$lightboxOptions === void 0 ? {} : _ref$lightboxOptions,
      _ref$onClose = _ref.onClose,
      onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose;

  var _useState = useState(0),
      index = _useState[0],
      setIndex = _useState[1];

  var _useState2 = useState(false),
      isOpen = _useState2[0],
      setIsOpen = _useState2[1];

  var prevIndex = (index + images.length - 1) % images.length;
  var nextIndex = (index + images.length + 1) % images.length; // URLs for full width images

  var mainSrc = (_images$index = images[index]) == null ? void 0 : (_images$index$full = _images$index.full) == null ? void 0 : (_images$index$full$im = _images$index$full.images) == null ? void 0 : (_images$index$full$im2 = _images$index$full$im.fallback) == null ? void 0 : _images$index$full$im2.src;
  var nextSrc = (_images$nextIndex = images[nextIndex]) == null ? void 0 : (_images$nextIndex$ful = _images$nextIndex.full) == null ? void 0 : (_images$nextIndex$ful2 = _images$nextIndex$ful.images) == null ? void 0 : (_images$nextIndex$ful3 = _images$nextIndex$ful2.fallback) == null ? void 0 : _images$nextIndex$ful3.src;
  var prevSrc = (_images$prevIndex = images[prevIndex]) == null ? void 0 : (_images$prevIndex$ful = _images$prevIndex.full) == null ? void 0 : (_images$prevIndex$ful2 = _images$prevIndex$ful.images) == null ? void 0 : (_images$prevIndex$ful3 = _images$prevIndex$ful2.fallback) == null ? void 0 : _images$prevIndex$ful3.src;

  var onCloseLightbox = function onCloseLightbox() {
    onClose();
    setIsOpen(false);
  };

  return React.createElement(React.Fragment, null, React.createElement(Row, null, images.map(function (img, imgIndex) {
    var thumbImage = getImage(img.thumb);

    if (!thumbImage) {
      return null;
    }

    return React.createElement(Col, {
      width: colWidth,
      md: mdColWidth,
      key: imgIndex,
      onClick: function onClick() {
        setIsOpen(true);
        setIndex(imgIndex);
      }
    }, React.createElement(ImgWrapper, {
      margin: gutter
    }, React.createElement(GatsbyImage, {
      image: thumbImage,
      className: imgClass,
      alt: img.thumbAlt || ''
    })));
  })), isOpen && React.createElement(StyledLightbox, Object.assign({
    mainSrc: mainSrc || '',
    nextSrc: nextSrc || '',
    prevSrc: prevSrc || '',
    onCloseRequest: onCloseLightbox,
    onMovePrevRequest: function onMovePrevRequest() {
      return setIndex(prevIndex);
    },
    onMoveNextRequest: function onMoveNextRequest() {
      return setIndex(nextIndex);
    },
    imageTitle: images[index].title,
    imageCaption: images[index].caption
  }, lightboxOptions)));
};

export default Gallery;
//# sourceMappingURL=gatsby-image-gallery.esm.js.map
